{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAChCC,EAAeF,SAASC,cAAc,uBACtCE,EAAcH,SAASC,cAAc,sBACrCG,EAAWJ,SAASC,cAAc,wBAClCI,EAAYC,OAAOC,cAAc,QACjCC,EAAUF,OAAOC,cAAc,QAEjCE,EAAO,EACPC,EAAO,EACPC,EAAS,EACTC,EAAQ,EAqBZb,EAAOc,iBAAiB,UAAU,SAAAC,G,kBAM9BC,YAAW,WAzBf,IAAuBC,EAAOC,EA2BpBC,IACFT,GAAOC,IA5BQM,EA0BjBJ,GAAS,EA1BeK,EA8BHR,EA7BlB,IAAIU,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCT,YAAW,WACLO,EACFF,EAAQ,CACNK,MAAAT,EACAC,UAGFI,EAAO,CACLI,MAAAT,EACAC,YAGHA,OAgBES,MAAK,SAAAC,G,IAAGC,EAAKD,EAALF,MAAOR,EAAKU,EAALV,MACdY,EAAAhC,GAASiC,OAAOC,QACd,GAAgCC,OAA7BxB,EAAQ,uBAAiCwB,OAAZJ,EAAM,QAAYI,OAANf,EAAM,UAGrDgB,OAAM,SAAAN,G,IAAGO,EAAKP,EAALF,MAAOR,EAAKU,EAALV,MACfY,EAAAhC,GAASiC,OAAOK,QACd,GAAiCH,OAA9B3B,EAAU,sBAAgC2B,OAAZE,EAAM,QAAYF,OAANf,EAAM,YAGxDR,GACHG,EAAQ,GAtBVE,EAAMsB,iBACN3B,EAAOP,EAAamC,cACpB3B,EAAOP,EAAYkC,cACnB1B,EAASP,EAASiC,cAClB,IAAK,IAAIC,EAAI,EAAGA,EAAI3B,EAAQ2B,GAAK,EAACC,EAAAD,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst firstDelayEl = document.querySelector('input[name=\"delay\"]');\nconst stepDelayEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\nconst emojiFail = String.fromCodePoint(0x1f621);\nconst emojiOk = String.fromCodePoint(0x1f604);\n\nlet time = 0;\nlet step = 0;\nlet amount = 0;\nlet count = 0;\n\nfunction createPromise(count, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({\n          count,\n          delay,\n        });\n      } else {\n        reject({\n          count,\n          delay,\n        });\n      }\n    }, delay);\n  });\n}\n\nformEl.addEventListener('submit', event => {\n  event.preventDefault();\n  time = firstDelayEl.valueAsNumber;\n  step = stepDelayEl.valueAsNumber;\n  amount = amountEl.valueAsNumber;\n  for (let i = 0; i < amount; i += 1) {\n    setTimeout(() => {\n      count += 1;\n      if (i) {\n        time +=step ;\n      }\n      createPromise(count, time)\n        .then(({ count, delay }) => {\n          Notiflix.Notify.success(\n            `${emojiOk} Fulfilled promise ${count} in ${delay}ms`\n          );\n        })\n        .catch(({ count, delay }) => {\n          Notiflix.Notify.failure(\n            `${emojiFail} Rejected promise ${count} in ${delay}ms`\n          );\n        });\n    }, time);\n    count = 0;\n  }\n});"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$firstDelayEl","$ce04d3a99e08e73b$var$stepDelayEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$emojiFail","String","fromCodePoint","$ce04d3a99e08e73b$var$emojiOk","$ce04d3a99e08e73b$var$time","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$count","addEventListener","event","setTimeout","count1","delay","i","Promise","resolve","reject","shouldResolve","Math","random","count","then","param","count2","$parcel$interopDefault","Notify","success","concat","catch","count3","failure","preventDefault","valueAsNumber","i1","_loop"],"version":3,"file":"03-promises.29a5aa7d.js.map"}